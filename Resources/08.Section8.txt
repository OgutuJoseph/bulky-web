Section 8: Identity in .NET Core



110. ***********Scaffolding Error
• 



111. Scaffold Identity
- First add IdentityDbContext to ApplicationDbContext
    -> Got to BulkyBook.DataAccess >> Data >> ApplicationDbContext
    -> Change `public class ApplicationDbContext : DbContext`
    to
    `public class ApplicationDbContext : IdentityDbContext` >> Select `Install package 'Microsoft.AspNetCore.Identity.EntityFrameworkCore'`
        > choose `install using package manager` > version 6.0.24

- Then add the line below to `protected override void OnModelCreating (ModelBuilder modelBuilder)`
    -> base.OnModelCreating (modelBuilder);

- Steps
    -> Right click 'BulkyBookWeb'
    -> Select 'New Scaffolded Item'
    -> Choose 'Identity'
    -> Select 'Override all files'
    -> On the `DbContextClass` dropdown, choose 'ApplicationDbContext (BulkyBook.DataAccess.Data)'


112. Scaffold Identity Issue (NET 8)
• 



113. Understand What Got Added
• 



114. Add Identity Tables
• 



115. Extend Identity User
- On [Bulky >> BulkyBook.Models] add new item, `ApplicationUser`
- Alter the file as below
    ::
    `internal class ApplicationUser`
    :: 
    `public class ApplicationUser : IdentityUser`

    ^ Above prompts you to add NuGet Package `Microsoft.Extensions.Identity.Stores`
        > choose `install using package manager` > version 6.0.24

    ^ [ctrl] + [.] on << IdentityUser >> and choose 
        > using Microsoft.AspNetCore.Identity;

- Once you do above, it means that Application User will have all the default settings of the identity user.
- On top of that, say you want to add more fields e.g. `Name`, `StreetAddress` etc, you can add do as below:
    ::
    public class ApplicationUser : IdentityUser
    {
        [Required]
        public string Name { get; set; }
        public string? StreetAddress { get; set; }
        public string? City { get; set; }
        public string? State { get; set; }
        public string? PostalCode { get; set;}
    }
    ::

- Thereafter, before adding migration (you need to add a mapper for the same), add below on ApplicationDbContext
    -> public DbSet<ApplicationUser> ApplicationUsers { get; set; }

- Then on Package Manager Console
    -> add-migration ExtendIdentityUser
    -> update-user

- The new columns have an additional column `Discriminator` which is basically used to distinguish between Identity and Application Users.



116. Register a User
• 



117. Register an Application User
• 



118. Create Roles in Database
• 



119. Assign Roles on Registration
- [BulkyBookWeb >> Program.cs]
- Replace
    ::
    builder.Services.AddDefaultIdentity<IdentityUser>()
        .AddEntityFrameworkStores<ApplicationDbContext>();
    ::

    With
    ::
    builder.Services.AddIdentity<IdentityUser, IdentityRole>()
        .AddEntityFrameworkStores<ApplicationDbContext>();
    ::

- Code on [BulkyBook.Utility >> SD]
    ...

- Code on [BulkyBookWeb >> Areas >> Identity >> Pages >> Account >> Register.cshtml.cs]
    ...

- On
    [BulkyBook.Utility], add new class file `EmailSender`
    Replace
    ::
    `public class EmailSender`

    With
    ::
    public class EmailSender : IEmailSender
 
    ^ Above prompts you to add NuGet Package `Microsoft.AspNetCore.Identity.UI`
        > choose `install using package manager` > version 6.0.23
    
    ^ [ctrl] + [.] on << IEmailSender >> and choose 
        > using Microsoft.AspNetCore.Identity.UI.Services;

    ^ Implement interface

    ^ Register service on [BulkyBookWeb >> Program.cs]
        -> builder.Services.AddScoped<IEmailSender, EmailSender>();



120. Authorization in Project
• 



121. Update Login and Register UI
• 



122. Register Other Fields
• 



123. UI Bug
• 


