Section 1: Welcome and Getting Started


1. Welcome
• 



2. What we will Build
• 



3. Feedback
• 



4. Dot Net Core RoadMap
• 



5. Live Preview URL
• 



6. Project Resources
• 



7. .NET Community
• 



8. Prerequisites
• 



9. Tools Needed
• 



10. Download .NET 8 and VS Preview
• 



11. Course overview
• Course will cover:
    -> N-Tier Architecture
    -> Repository Pattern and UnitOfWork
    -> TempData/ViewBag/ViewData in .NET Core
    -> API Controllers with Razor Pages
    -> SweetAlerts, Rich Text Editor and Data Tables with .NET Core
    -> Scaffold Identity (Razor Class Library)
    -> Roles and Authentication in .NET Core
    -> Stripe Payment / Refund with .NET Core
    -> Session in .NET Core
    -> Emails with SendGrid
    -> User Management
    -> Social Login with Facebook
    -> View Components in .NET Core
    -> Seed Database with DbInitializer
    -> Deploy to Azure



12. Create Project
• Creating project
    -> Visual Studio >> Create Project
    -> Template :: ASP.NET Core Web App (Model-View-Controller)
    -> Select Project Dir >> Project Name [BulkyWeb] >> Solution Name [Bulky]
        :: Leave 'Place solution and project in same directory' unchecked
    -> Framework :: .NET 6.0 (Long Term Support)



13. Project File
• In Bulky >> 
    -> Right Click 'BulkyWeb' >> 'Edit Project File'



14. Launch Settings
• In Bulky >> BulkyWeb
    -> Expand 'Properties' >> launchSettings.json



15. wwwroot and appsettings
• [wwwroot] In Bulky >> BulkyWeb
    -> wwwroot

• [appsettings] In Bulky >> BulkyWeb
    -> appsettings.json
    -> Expandable to get appSettings.Development.json

    - used to host all connection strings
    - used to store secret keys [e.g. SendGrid, Email, Azure keys etc]



16. Program File
• [Program.cs] In Bulky >> BulkyWeb
    -> Program.cs

    - In older versions of .NET Core, we had Program.cs and Startup.cs
    - With new versions, the above two are combined

    - When we have to configure .NET applications, we need to:
        1. Add Services to container 
        [
            var builder.... 
            builder.Service.ServiceName1,... 
        ]

        2. Configure request pipeline
        [
            app.UserHttpsRedirection;
            app.UseStaticFiles;
            ...
        ]



17. MVC Architecture
• Model         - Represents the shape of the data
• View          - Represents the user interface
• Controller    - Handles the user requests and acts as an interface between Model and View



18. Routing overview
- The URL pattern for routing is considered after the domain name
    E.g.: http://localhost:55555/Category/Index/3
    • Domain        -> http://localhost:55555
    • Controller    -> Category    
    • Action        -> Index




19. Routing in Action
• 



20. Default Views
- The view [Bulky >> BulkyWeb >> Views >> Shared >> _Layout.cshtml] is configured as the default layout / master page.
    ^ This is defined in [Bulky >> BulkyWeb >> Views >> _ViewStart.cshtml]

- The file [Bulky >> BulkyWeb >> Views >> _ViewImports.cshtml] is considered as the 'Global Import File'.
    ^ Rather than writing / importing the @using statement(s) on all files, you can include them here and they'll be automatically availed in all files.



21. What is Dependency Injection
• Dependency Injection - A design pattern in which a class / object has its dependent classes injected rather than directly creating them.
    ^ This is done so that we don't have create, manage and dispose the object, and it improves the loose coupling between classes.



22. Go Easy on Yourself
• 


